
#!/usr/bin/env python
#
# Rotary encoders for volume and frequency
#
# This class uses standard rotary encoder with push switch
#
import sys
import time
import subprocess
from rotary_class import RotaryEncoder
#from pynput.keyboard import Controller
from pynput.keyboard import Key, Controller
keyboard = Controller()  # Create the controller

# Switch definitions
TOP_BUTTON = 6
TOP_A = 5
TOP_B = 0
BOTTOM_BUTTON = 13
BOTTOM_A = 19
BOTTOM_B = 26

# This is the event callback routine to handle left knob events
def TOP_knob_event(event):
    if event == RotaryEncoder.CLOCKWISE:
        subprocess.call('amixer set Master 10%+', shell=True)
    elif event == RotaryEncoder.ANTICLOCKWISE:
        subprocess.call('amixer set Master 10%-', shell=True)
    elif event == RotaryEncoder.BUTTONDOWN:
        subprocess.call('amixer set Master 0%', shell=True)
   #elif event == RotaryEncoder.BUTTONUP:
#    print name, "Button up event =", RotaryEncoder.BUTTONUP
    return

# This is the event callback routine to handle right knob events
def BOTTOM_knob_event(event):
    if event == RotaryEncoder.CLOCKWISE:
        keyboard.press(']')
        keyboard.release(']')
        time.sleep(0.1)
        #print ('bottomCW')
    elif event == RotaryEncoder.ANTICLOCKWISE:
        keyboard.press('[')
        keyboard.release('[')
        time.sleep(0.1)
    elif event == RotaryEncoder.BUTTONDOWN:
        keyboard.press('m')
        keyboard.release('m')
        time.sleep(0.1)
        #elif event == RotaryEncoder.BUTTONUP:
        #       print name, "Button up event =", RotaryEncoder.BUTTONUP
    return
                    
# Define the left and right knobs
leftknob = RotaryEncoder(TOP_A,TOP_B,TOP_BUTTON,TOP_knob_event)
rightknob = RotaryEncoder(BOTTOM_A,BOTTOM_B,BOTTOM_BUTTON,BOTTOM_knob_event)
# Wait for events
while True:
    time.sleep(0.1)

